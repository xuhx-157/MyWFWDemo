server.port=10010

spring.application.name=gateway
spring.cloud.nacos.server-addr=http://nacos:8848

#路由ID，必须唯一
spring.cloud.gateway.routes[0].id=userservice
#路由目标地址，可以是真实的ip + port(ttp://ip:port)，也可以是注册在注册中心的实例名称(lb://实例名称)，lb就是负载均衡
spring.cloud.gateway.routes[0].uri=lb://userservice
#路由规则，设置路由规则
spring.cloud.gateway.routes[0].predicates[0]= Path=/userService/**
#局部过滤器
spring.cloud.gateway.routes[0].filters[0]= AddRequestHeader=Truth,Hello Spring Cloud!
#添加全局过滤器
spring.cloud.gateway.default-filters[0]= AddRequestHeader=Truth,Hello Spring Cloud!

#跨域解决
#解决options请求被拦截的问题 （options请求就是浏览器向服务器询问该请求是否可以跨域）
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
#允许哪些网站的跨域请求
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-origins[0]=http://localhost:8849
#允许的跨域ajax的请求方式
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-methods[0]=GET
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-methods[1]=POST
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-methods[2]=DELETE
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-methods[3]=PUT
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-methods[4]=OPTIONS
#允许在请求中携带的头信息
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-headers[0]=*
#是否允许携带cookie
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allow-credentials=true
#这次跨域检测的有效期（这个值设置的越长，对系统的性能提高越好）
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.max-age=360000


